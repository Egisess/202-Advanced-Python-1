import matplotlib.pyplot as plt
import numpy as np
import scipy.special as sp


def distribution(lmbd, N):
    if lmbd < 0 or N < 0:
        raise ValueError
    n = np.arange(N+1)
    return (n, np.float_power(lmbd, n)*np.exp(-lmbd)/sp.factorial(n))


def moment(distribution, k):
    if not isinstance(k, int) or not isinstance(distribution[0], np.ndarray) or not isinstance(distribution[1], np.ndarray):
        raise ValueError
    return np.sum(distribution[0]**k*distribution[1])


def average(distribution):
    return moment(distribution, 1)


def dispertion(distribution):
    if not isinstance(distribution[0], np.ndarray) or not isinstance(distribution[1], np.ndarray):
        raise ValueError
    return average([(distribution[0] - average(distribution)) ** 2, distribution[1]])


if __name__ == '__main__':
    fig, ax = plt.subplots()
    x = list()
    for N in np.arange(1, 101, step=1):
        x.append(average(distribution(50, N)))
    plt.plot(x)
    y = list()
    for P in np.arange(1, 101, step=1):
        y.append(dispertion(distribution(50, P)))
    plt.plot(y)
    ax.hlines(50, 1, 100)
    plt.show()
